#include<bits/stdc++.h>
using namespace std;
string T;
string T_new;
void init()
{
    T_new+="$#";
    int Tsz=T.size();
    for(int i=0;i<Tsz;i++)
    {
        T_new+=T[i];
        T_new+='#';
    }
    T_new+='&';
}
int len[2000006];
bool check(char i,char j)
{
    if(i==j) return 1;
    return 0;
}
void build()
{
    int l=1,r=1,p=1;
    int n=T_new.size();
    for(int i=2;i<n-2;i++)
    {
        if(!check(T_new[i],T_new[i]))continue;
        if(i>r)
        {
            l=r=p=i;
            while(check(T_new[l-1],T_new[r+1]))
                l--,r++;
            len[i]=r-p;
        }
        else
        {
            len[i]=len[2*p-i];
            if(len[i]+i>=r)
            {
                p = i;
                l = 2 * p - r;
                while(check(T_new[l-1],T_new[r+1]))
                    l--,r++;
                len[i] = r - p;
            }
        }
    }
}
int num[1000006];
int main()
{
    cin>>T;
    if(T=="1")
    {
        cout<<1;
        return 0;
    }
    for(int i=0;i<T.size();i++)
    {
        if(T[i]=='1')num[i]=1;
        if(i>0)num[i]+=num[i-1];
    }
    init();
    build();
    int ans=0;
    int L=0,R=0;
    int max1=0;        
    for(int i=1;i<T_new.size()-1;i++)
    {
        if(T_new[i]=='1')continue;
        int l=(i-len[i])/2,r=i-2-l;
        if(max1<(num[r]-(l==0?0:num[l-1])))
        {
            L=l,R=r;
            max1=num[r]-num[l-1];
        }
    }
    if(L>0)
        ans+=num[L-1];
    if(R<T.size()-1)
        ans+=num[T.size()-1]-num[R];
    ans+=(max1/2);
    cout<<ans<<endl;
}
